name: .NET Release

on:
  push:
    tags: [ "v*" ]

jobs:
  release:
    runs-on: windows-latest

    steps:
    -
      name: Checkout code
      uses: actions/checkout@v4
    -
      name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.x
    -
      name: Restore dependencies
      run: dotnet restore
    -
      name: Build
      run: dotnet build --no-restore
    -
      name: Test
      run: dotnet test --no-build --verbosity normal
    -
      name: Publish Dynamic Release for Linux x86-64
      run: dotnet publish -c Release -p:PublishProfile=LinuxX64FolderProfile
    -
      name: Publish Dynamic Release for Linux arm64
      run: dotnet publish -c Release -p:PublishProfile=LinuxArm64FolderProfile
    -
      name: Publish Dynamic Release for Windows x86-64
      run: dotnet publish -c Release -p:PublishProfile=WinX64FolderProfile
    -
      name: Publish Dynamic Release for Windows arm64
      run: dotnet publish -c Release -p:PublishProfile=WinArm64FolderProfile
    -
      name: Publish Dynamic Release for OSX x86-64
      run: dotnet publish -c Release -p:PublishProfile=MacX64FolderProfile
    -
      name: Publish Dynamic Release for OSX arm64
      run: dotnet publish -c Release -p:PublishProfile=MacArm64FolderProfile
    -
      name: Publish Static Release for Linux x86-64
      run: dotnet publish -c Release -p:PublishProfile=LinuxX64FolderProfile_static
    -
      name: Publish Static Release for Linux arm64
      run: dotnet publish -c Release -p:PublishProfile=LinuxArm64FolderProfile_static
    -
      name: Publish Static Release for Windows x86-64
      run: dotnet publish -c Release -p:PublishProfile=WinX64FolderProfile_static
    -
      name: Publish Static Release for Windows arm64
      run: dotnet publish -c Release -p:PublishProfile=WinArm64FolderProfile_static
    -
      name: Publish Static Release for OSX x86-64
      run: dotnet publish -c Release -p:PublishProfile=MacX64FolderProfile_static
    -
      name: Publish Static Release for OSX arm64
      run: dotnet publish -c Release -p:PublishProfile=MacArm64FolderProfile_static
    -
      name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Release Note

          Please refer to the commit messages for what's new in this release. We provide prebuilt binaries here for the x86-64 and arm64 architectures as-is without any warranty. Follow the developer's guide on the project readme should you need to customize your build or for any other architecture.

          ### Deployment guide

          The prebuilt binaries are provided as-is. Download the binary file for your certain system, place it in a binary path with a short name.
          e.g.

          On Windows: C:\WINDOWS\system32\mccsx.exe
          On Linux/MacOS: /usr/local/bin/mccsx

          ### Prerequisite

          * .NET 6.0 SDK or runtime: Follow [the official guide](https://dotnet.microsoft.com/download/dotnet/6.0) to install.
          * GDI+ lib: On platforms other than Windows, an additional lib must be installed to support the generation of heatmaps.

          For example, on Ubuntu, run
          ```
          sudo apt install libgdiplus
          ```

          On macOS, run
          ```
          brew install mono-libgdiplus
          ```
        draft: false
        prerelease: false
    -
      name: Upload Dynamic Asset for Linux x86-64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/linux-x64/mccsx"
        asset_name: mccsx_linux_x64
        asset_content_type: application/x-executable
    -
      name: Upload Dynamic Asset for Linux arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/linux-arm64/mccsx"
        asset_name: mccsx_linux_arm64
        asset_content_type: application/x-executable
    -
      name: Upload Dynamic Asset for Windows x86-64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/win-x64/mccsx.exe"
        asset_name: mccsx_win_x64.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    -
      name: Upload Dynamic Asset for Windows arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/win-arm64/mccsx.exe"
        asset_name: mccsx_win_arm64.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    -
      name: Upload Dynamic Asset for OSX x86-64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/osx-x64/mccsx"
        asset_name: mccsx_mac_x64
        asset_content_type: application/mac-binhex40
    -
      name: Upload Dynamic Asset for OSX arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/osx-arm64/mccsx"
        asset_name: mccsx_mac_arm64
        asset_content_type: application/mac-binhex40
    -
      name: Upload Static Asset for Linux x86-64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/linux-x64_static/mccsx"
        asset_name: mccsx_linux_x64_static
        asset_content_type: application/x-executable
    -
      name: Upload Static Asset for Linux arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/linux-arm64_static/mccsx"
        asset_name: mccsx_linux_arm64_static
        asset_content_type: application/x-executable
    -
      name: Upload Static Asset for Windows x86-64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/win-x64_static/mccsx.exe"
        asset_name: mccsx_win_x64_static.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    -
      name: Upload Static Asset for Windows arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/win-arm64_static/mccsx.exe"
        asset_name: mccsx_win_arm64_static.exe
        asset_content_type: application/vnd.microsoft.portable-executable
    -
      name: Upload Static Asset for OSX x86-64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/osx-x64_static/mccsx"
        asset_name: mccsx_mac_x64_static
        asset_content_type: application/mac-binhex40
    -
      name: Upload Static Asset for OSX arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "./bin/publish/osx-arm64_static/mccsx"
        asset_name: mccsx_mac_arm64_static
        asset_content_type: application/mac-binhex40
